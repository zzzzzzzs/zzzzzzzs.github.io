{"version":3,"sources":["webpack:///./src/components/metadata/MetaData.vue?022a","webpack:///./src/components/metadata/MetaData.vue","webpack:///src/components/metadata/MetaData.vue","webpack:///./src/components/metadata/MetaData.vue?c994","webpack:///./src/components/metadata/MetaData.vue?add2"],"names":["render","_vm","this","_c","_self","attrs","path","_v","staticClass","on","getSchemaAndTable","model","value","sourceId","callback","$$v","expression","_l","dataSourceList","item","key","id","databaseName","filterText","ref","metaDataList","defaultProps","filterNode","handleNodeClick","staticStyle","$event","showSyncStructDialog","options","casProps","handleChange","syncTableInfo","tablePrefix","$set","tableSuffix","slot","syncTableStruct","staticRenderFns","name","watch","data","lazy","lazyLoad","level","params","label","leaf","resolve","targetData","targetId","targetSchema","metaInfos","children","created","methods","schemaName","tableName","component"],"mappings":"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","file":"js/Meta_Data.60e6232e.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MetaData.vue?vue&type=style&index=0&id=325b8b74&prod&lang=less&scoped=true&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"元数据中心\")]),_c('el-breadcrumb-item',[_vm._v(\"元数据中心\")])],1),_c('el-card',[_c('el-row',{attrs:{\"gutter\":24}},[_c('el-col',{attrs:{\"span\":10}},[_c('div',{staticClass:\"grid-content bg-purple\"},[_vm._v(\" 源端数据库 \"),_c('el-select',{attrs:{\"filterable\":\"\",\"placeholder\":\"请选择\"},on:{\"change\":_vm.getSchemaAndTable},model:{value:(_vm.sourceId),callback:function ($$v) {_vm.sourceId=$$v},expression:\"sourceId\"}},_vm._l((_vm.dataSourceList),function(item){return _c('el-option',{key:item.id,attrs:{\"label\":item.databaseName,\"value\":item.id}})}),1)],1),_c('el-row',{attrs:{\"gutter\":24}},[_c('el-col',{attrs:{\"span\":14}},[_c('el-input',{attrs:{\"placeholder\":\"输入关键字进行过滤\",\"label-width\":\"140px\"},model:{value:(_vm.filterText),callback:function ($$v) {_vm.filterText=$$v},expression:\"filterText\"}}),_c('el-tree',{ref:\"tree\",staticClass:\"filter-tree\",attrs:{\"data\":_vm.metaDataList,\"show-checkbox\":\"\",\"props\":_vm.defaultProps,\"filter-node-method\":_vm.filterNode,\"node-key\":\"name\"},on:{\"node-click\":_vm.handleNodeClick}})],1)],1)],1),_c('el-col',{attrs:{\"span\":4}},[_c('el-button',{staticStyle:{\"margin-left\":\"16px\"},attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.showSyncStructDialog = true}}},[_vm._v(\"创建表结构 \")])],1),_c('el-col',{attrs:{\"span\":10}},[_c('div',{staticClass:\"grid-content bg-purple\"},[_vm._v(\" 目标数据库 \"),_c('el-cascader',{attrs:{\"options\":_vm.options,\"props\":_vm.casProps},on:{\"change\":_vm.handleChange}})],1)])],1)],1),_c('el-dialog',{attrs:{\"title\":\"表结构同步\",\"visible\":_vm.showSyncStructDialog,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.showSyncStructDialog=$event}}},[_c('el-form',{attrs:{\"model\":_vm.syncTableInfo,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"表前缀：\",\"prop\":\"tablePrefix\"}},[_c('el-input',{model:{value:(_vm.syncTableInfo.tablePrefix),callback:function ($$v) {_vm.$set(_vm.syncTableInfo, \"tablePrefix\", $$v)},expression:\"syncTableInfo.tablePrefix\"}})],1),_c('el-form-item',{attrs:{\"label\":\"表后缀：\",\"prop\":\"tableSuffix\"}},[_c('el-input',{model:{value:(_vm.syncTableInfo.tableSuffix),callback:function ($$v) {_vm.$set(_vm.syncTableInfo, \"tableSuffix\", $$v)},expression:\"syncTableInfo.tableSuffix\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.syncTableStruct}},[_vm._v(\"开始同步表结构\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航区域-->\r\n    <el-breadcrumb separator-class='el-icon-arrow-right'>\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>元数据中心</el-breadcrumb-item>\r\n      <el-breadcrumb-item>元数据中心</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <el-card>\r\n      <el-row :gutter=\"24\">\r\n        <el-col :span=\"10\">\r\n          <div class=\"grid-content bg-purple\">\r\n            源端数据库\r\n            <el-select v-model=\"sourceId\" filterable placeholder=\"请选择\" @change=\"getSchemaAndTable\">\r\n              <el-option v-for=\"item in dataSourceList\" :key=\"item.id\" :label=\"item.databaseName\"\r\n                         :value=\"item.id\"></el-option>\r\n            </el-select>\r\n          </div>\r\n          <el-row :gutter=\"24\">\r\n            <el-col :span=\"14\">\r\n              <el-input placeholder=\"输入关键字进行过滤\" v-model=\"filterText\" label-width=\"140px\"></el-input>\r\n              <el-tree\r\n                class=\"filter-tree\"\r\n                :data=\"metaDataList\"\r\n                show-checkbox\r\n                :props=\"defaultProps\"\r\n                :filter-node-method=\"filterNode\"\r\n                ref=\"tree\"\r\n                node-key=\"name\"\r\n                @node-click=\"handleNodeClick\"\r\n              >\r\n              </el-tree>\r\n            </el-col>\r\n          </el-row>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <!--<el-button @click=\"syncTableStruct\" type=\"primary\" style=\"margin-left: 16px;\">创建表结构</el-button>-->\r\n          <el-button @click=\"showSyncStructDialog = true\" type=\"primary\" style=\"margin-left: 16px;\">创建表结构\r\n          </el-button>\r\n        </el-col>\r\n        <el-col :span=\"10\">\r\n          <div class=\"grid-content bg-purple\">\r\n            目标数据库\r\n            <el-cascader :options=\"options\" :props=\"casProps\" @change=\"handleChange\"></el-cascader>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n\r\n    <!-- 表结构同步信息对话框 -->\r\n    <el-dialog title=\"表结构同步\" :visible.sync=\"showSyncStructDialog\" width=\"50%\">\r\n      <!-- 添加分类的表单 -->\r\n      <el-form :model=\"syncTableInfo\" label-width=\"80px\">\r\n        <el-form-item label=\"表前缀：\" prop=\"tablePrefix\">\r\n          <el-input v-model=\"syncTableInfo.tablePrefix\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"表后缀：\" prop=\"tableSuffix\">\r\n          <el-input v-model=\"syncTableInfo.tableSuffix\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"syncTableStruct\">开始同步表结构</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MetaData',\r\n  watch: {\r\n    filterText(val) {\r\n      console.log(val)\r\n      this.$refs.tree.filter(val);\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // 同步表结构信息\r\n      syncTableInfo: {\r\n        tablePrefix: '', // 表前缀\r\n        tableSuffix: '' // 表后缀\r\n      },\r\n      showSyncStructDialog: false,\r\n      options: [],\r\n      casProps: {\r\n        lazy: true, // 此处必须为true\r\n        lazyLoad: async (node, resolve) => {\r\n          let {level} = node;\r\n          if (node.data === undefined) {\r\n            return\r\n          }\r\n          const {data: res} = await this.$http.get('metadata/getSchemaAndTable', {params: {id: node.data.value}});\r\n          if (res.code !== 200) {\r\n            return this.$message.error('获取元数据失败！')\r\n          }\r\n          const nodes = res.data.map(item => ({\r\n            value: item.name,\r\n            label: item.name,\r\n            leaf: level >= 1\r\n          }));\r\n          resolve(nodes);\r\n        }\r\n      },\r\n      filterText: '',\r\n      dataSourceList: [],\r\n      sourceId: '',\r\n      targetData: {\r\n        targetId: '',\r\n        targetSchema: ''\r\n      },\r\n      metaDataList: [],\r\n      // 要同步表的信息\r\n      metaInfos: [],\r\n      defaultProps: {\r\n        children: 'tables',\r\n        label: 'name'\r\n      }\r\n    }\r\n  },\r\n  // 刚进入界面首先调用这里的函数\r\n  created() {\r\n    this.getDataSourceList()\r\n  },\r\n  methods: {\r\n    async localFlinkCDC() {\r\n      const {data: res} = await this.$http.post('metadata/localFlinkCDC', {\r\n        'sourceId': this.sourceId,\r\n        'targetData': this.targetData,\r\n        'tables': this.$refs.tree.getCheckedNodes(true)\r\n      })\r\n    },\r\n    handleChange(value) {\r\n      console.log(value);\r\n      this.targetData.targetId = value[0]\r\n      this.targetData.targetSchema = value[1]\r\n    },\r\n    async handleNodeClick(data) {\r\n      const node = this.$refs.tree.getNode(data.name);\r\n      // 证明是叶子节点\r\n      if (node.childNodes.length === 0) {\r\n        const {data: res} = await this.$http.get('metadata/listColumns', {\r\n          params: {\r\n            id: this.sourceId,\r\n            schemaName: data.schema,\r\n            tableName: data.name\r\n          }\r\n        })\r\n        if (res.code !== 200) {\r\n          return this.$message.error('获取列元数据失败！')\r\n        }\r\n        console.log(res)\r\n      }\r\n    },\r\n    // 同步表结构\r\n    async syncTableStruct() {\r\n      if (this.targetData.targetId === \"\") {\r\n        return this.$message.error(\"未选择目标数据库\")\r\n      }\r\n      // 关闭对话框\r\n      this.showSyncStructDialog = false;\r\n      console.log(this.syncTableInfo)\r\n      const {data: res} = await this.$http.post('metadata/syncTableStruct', {\r\n        'sourceId': this.sourceId,\r\n        'targetData': this.targetData,\r\n        'tables': this.$refs.tree.getCheckedNodes(true),\r\n        'syncTableInfo': this.syncTableInfo\r\n      })\r\n      console.log(res)\r\n      if (res.code !== 200) return this.$message.error('同步表结构失败，失败信息 : ' + res.message);\r\n      return this.$message.success('同步表结构成功！')\r\n    },\r\n    async getDataSourceList() {\r\n      const {data: res} = await this.$http.get('datasource/listDataSource')\r\n      if (res.code !== 200) {\r\n        return this.$message.error('获取数据源列表失败！')\r\n      }\r\n      this.dataSourceList = res.data.records\r\n      this.dataSourceList.map(item => {\r\n        this.options.push({\r\n          value: item.id,\r\n          label: item.databaseName\r\n        })\r\n      })\r\n      this.total = res.data.total\r\n      console.log(this.dataSourceList)\r\n    },\r\n    async getSchemaAndTable() {\r\n      const {data: res} = await this.$http.get('metadata/getSchemaAndTable', {params: {id: this.sourceId}})\r\n      if (res.code !== 200) {\r\n        return this.$message.error('获取元数据失败！')\r\n      }\r\n      this.metaDataList = res.data\r\n      console.log(res)\r\n    },\r\n    filterNode(value, metaDataList) {\r\n      if (!value) return true;\r\n      return metaDataList.name.indexOf(value) !== -1;\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<!--scoped 只在当前组件中生效，去掉在全局生效。一个组件中的样式不应该影响其他地方-->\r\n<style lang='less' scoped>\r\n.datasource-title {\r\n  position: relative;\r\n  height: 40px;\r\n\r\n  .add-btn {\r\n    position: absolute;\r\n    right: 10px;\r\n    bottom: 15px;\r\n  }\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MetaData.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MetaData.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MetaData.vue?vue&type=template&id=325b8b74&scoped=true&\"\nimport script from \"./MetaData.vue?vue&type=script&lang=js&\"\nexport * from \"./MetaData.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MetaData.vue?vue&type=style&index=0&id=325b8b74&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"325b8b74\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}